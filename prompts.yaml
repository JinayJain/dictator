# Dictator LLM Prompt Configuration
# This file defines reusable prompts and application mappings for LLM post-processing

# Global configuration
config:
  llm_indicator: " âœ¦" # Unicode character to append to LLM-generated text

# Reusable prompt definitions
prompts:
  super_casual_chat:
    name: "Super Casual Chat"
    description: "Very informal text for chat apps like Discord, Slack, texting"
    add_indicator: true # Add LLM indicator for this prompt type
    template: |
      Convert this voice transcription to super casual chat text like you'd type in Discord or texting.

      Guidelines:
      - Use lowercase for most things
      - Use punctuation where it feels natural
      - Use texting abbreviations (u, ur, gonna, wanna, etc.)
      - Use casual contractions
      - Keep it casual but faithful to the original text

      Original transcribed text: {transcript}

      Respond with only the casual chat text, no explanations.

  terminal:
    name: "Terminal Command Inference"
    description: "Infers whether the user is trying to type a terminal command or just speaking in general"
    template: |
      Analyze the following voice transcription and determine if the user is trying to type a terminal command or just speaking in general.

      Guidelines:
      - If the user is trying to type a terminal command, transform it into the appropriate command.
      - If the user is just speaking in general, output the text as is.
      - Ensure the command is valid and follows terminal syntax.

      Original transcribed text: {transcript}

      Respond with only the processed text or command, no explanations.

  context_aware:
    name: "Context-Aware Formatting"
    description: "Automatically infers appropriate text formatting based on the active window title and application context"
    template: |
      You are a context-aware text formatter. Based on the window title and application context, automatically format the voice transcription to match the appropriate style and tone for that context.

      Window title: {window_title}
      Original transcribed text: {transcript}

      Guidelines:
      - Analyze the window title to understand the context (email, document, chat, social media, coding, etc.)
      - Format the text appropriately for that context:
        * Email: Professional, proper grammar, complete sentences
        * Chat/messaging: Casual, abbreviations, lowercase where appropriate
        * Documents/Word processors: Formal, proper formatting, complete sentences
        * Code editors: Technical language, programming terminology
        * Social media: Casual, lowercase, but readable, appropriate hashtags or mentions if context suggests
        * Browsers: Depends on the site (if recognizable from title)
      - Maintain the original meaning while adapting the style
      - If context is unclear, default to a neutral, readable format

      Respond with only the formatted text, no explanations.

# Application-specific prompt mappings
applications:
  # Chat/messaging apps - super casual with texting slang
  chat_apps:
    patterns:
      - "discord"
      - "slack"
      - "telegram"
      - "signal"
      - "whatsapp"
      - "element" # Matrix client
      - "riot" # Matrix client
    prompt: "super_casual_chat"

  # Terminal applications - infer terminal commands
  terminals:
    patterns:
      - "terminal"
      - "iterm2"
      - "konsole"
      - "gnome-terminal"
      - "xterm"
      - "alacritty"
      - "kitty"
    prompt: "terminal"

  # Browsers and general applications - context-aware formatting
  browsers:
    patterns:
      - "google-chrome"
      - "chromium"
      - "firefox"
      - "safari"
      - "brave"
      - "edge"
      - "opera"
    prompt: "context_aware"

  # Default fallback - no processing
  default:
    prompt: null
